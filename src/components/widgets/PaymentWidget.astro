---
// File: src/components/PaymentWidget.astro

interface PaymentOption {
  name: string;
  description: string;
  url: string;
  payment: string;
}

interface Props {
  title: string;
  description: string;
  items: PaymentOption[];
  usage: string[];
}

const { title, description, items, usage } = Astro.props;
---

<div class="payment-widget w-full max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
  <div class="p-6 sm:p-8">
    <h2 class="text-3xl font-bold text-gray-800 mb-4">{title}</h2>
    <p class="text-xl text-gray-600 mb-8">{description}</p>
    <div class="space-y-6">
      {
        items.map((item) => (
          <div class="bg-white border border-blue-100 rounded-xl p-6 flex flex-col">
            <h3 class="text-2xl font-semibold text-gray-800 mb-2">{item.name}</h3>
            <p class="text-gray-600 mb-4 flex-grow">{item.description}</p>
            <div class="flex justify-end">
              <a
                href={item.url}
                class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-3 px-6 rounded-lg transition duration-300 ease-in-out text-center w-full sm:w-1/2 md:w-1/2 lg:w-1/3"
              >
                {item.payment}
              </a>
            </div>
          </div>
        ))
      }
    </div>

    {
      usage && usage.length > 0 && (
        <div class="mt-12 bg-white rounded-xl p-6 border border-blue-100">
          <h3 class="text-2xl font-semibold text-gray-800 mb-4">Examples</h3>
          <ul class="list-disc list-inside space-y-2 text-xl">
            {usage.map((item) => (
              <li class="text-gray-600">{item}</li>
            ))}
          </ul>
        </div>
      )
    }
  </div>
</div>
